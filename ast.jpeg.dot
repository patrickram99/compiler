digraph AST {
  node [shape=box];
Node1 [label="Program"];
Node2 [label="ExpressionStatement"];
Node1 -> Node2;
Node3 [label="ExpressionStatement"];
Node1 -> Node3;
Node4 [label="ExpressionStatement"];
Node1 -> Node4;
Node5 [label="ExpressionStatement"];
Node1 -> Node5;
Node6 [label="ExpressionStatement"];
Node1 -> Node6;
Node7 [label="ExpressionStatement"];
Node1 -> Node7;
Node8 [label="ExpressionStatement"];
Node1 -> Node8;
Node9 [label="ExpressionStatement"];
Node10 [label="Variable: HEAD"];
Node9 -> Node10;
Node1 -> Node9;
Node11 [label="LetStatement"];
Node12 [label="Variable: omg"];
Node11 -> Node12;
Node13 [label="FunctionLiteral"];
Node14 [label="Variable: x"];
Node13 -> Node14;
Node15 [label="BlockStatement"];
Node16 [label="ReturnStatement"];
Node17 [label="InfixExpression: +"];
Node18 [label="InfixExpression: *"];
Node19 [label="Variable: x"];
Node18 -> Node19;
Node20 [label="IntegerLiteral: 2"];
Node18 -> Node20;
Node17 -> Node18;
Node21 [label="IntegerLiteral: 5"];
Node17 -> Node21;
Node16 -> Node17;
Node15 -> Node16;
Node13 -> Node15;
Node11 -> Node13;
Node1 -> Node11;
Node22 [label="ExpressionStatement"];
Node23 [label="InfixExpression: =="];
Node24 [label="InfixExpression: =="];
Node25 [label="CallExpression"];
Node26 [label="Variable: SpeakNow"];
Node25 -> Node26;
Node27 [label="CallExpression"];
Node28 [label="Variable: omg"];
Node27 -> Node28;
Node29 [label="IntegerLiteral: 3"];
Node27 -> Node29;
Node25 -> Node27;
Node24 -> Node25;
Node30 [label="Desconocido: <nil>"];
Node24 -> Node30;
Node23 -> Node24;
Node31 [label="Desconocido: <nil>"];
Node23 -> Node31;
Node22 -> Node23;
Node1 -> Node22;
Node32 [label="ExpressionStatement"];
Node33 [label="IfExpression"];
Node34 [label="InfixExpression: =="];
Node35 [label="IntegerLiteral: 2"];
Node34 -> Node35;
Node36 [label="InfixExpression: +"];
Node37 [label="IntegerLiteral: 1"];
Node36 -> Node37;
Node38 [label="InfixExpression: *"];
Node39 [label="IntegerLiteral: 1"];
Node38 -> Node39;
Node40 [label="FloatLiteral: 0.5"];
Node38 -> Node40;
Node36 -> Node38;
Node34 -> Node36;
Node33 -> Node34;
Node41 [label="BlockStatement"];
Node42 [label="ExpressionStatement"];
Node43 [label="CallExpression"];
Node44 [label="Variable: SpeakNow"];
Node43 -> Node44;
Node45 [label="Boolean: true"];
Node43 -> Node45;
Node42 -> Node43;
Node41 -> Node42;
Node33 -> Node41;
Node46 [label="BlockStatement"];
Node47 [label="ExpressionStatement"];
Node48 [label="CallExpression"];
Node49 [label="Variable: SpeakNow"];
Node48 -> Node49;
Node50 [label="Boolean: false"];
Node48 -> Node50;
Node47 -> Node48;
Node46 -> Node47;
Node33 -> Node46;
Node32 -> Node33;
Node1 -> Node32;
Node51 [label="ExpressionStatement"];
Node52 [label="InfixExpression: >"];
Node53 [label="InfixExpression: >"];
Node54 [label="InfixExpression: >"];
Node55 [label="InfixExpression: >"];
Node56 [label="CallExpression"];
Node57 [label="Variable: SpeakNow"];
Node56 -> Node57;
Node58 [label="String: Holaaa"];
Node56 -> Node58;
Node55 -> Node56;
Node59 [label="Desconocido: <nil>"];
Node55 -> Node59;
Node54 -> Node55;
Node60 [label="Desconocido: <nil>"];
Node54 -> Node60;
Node53 -> Node54;
Node61 [label="Desconocido: <nil>"];
Node53 -> Node61;
Node52 -> Node53;
Node62 [label="InfixExpression: -"];
Node63 [label="Variable: if"];
Node62 -> Node63;
Node64 [label="Variable: else"];
Node62 -> Node64;
Node52 -> Node62;
Node51 -> Node52;
Node1 -> Node51;
}
