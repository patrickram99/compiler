digraph AST {
  node [shape=box];
Node1 [label="Program"];
Node2 [label="LetStatement"];
Node3 [label="Variable: omg"];
Node2 -> Node3;
Node4 [label="FunctionLiteral"];
Node5 [label="Variable: x"];
Node4 -> Node5;
Node6 [label="BlockStatement"];
Node7 [label="ReturnStatement"];
Node8 [label="InfixExpression: +"];
Node9 [label="InfixExpression: *"];
Node10 [label="Variable: x"];
Node9 -> Node10;
Node11 [label="IntegerLiteral: 2"];
Node9 -> Node11;
Node8 -> Node9;
Node12 [label="IntegerLiteral: 5"];
Node8 -> Node12;
Node7 -> Node8;
Node6 -> Node7;
Node4 -> Node6;
Node2 -> Node4;
Node1 -> Node2;
Node13 [label="ExpressionStatement"];
Node14 [label="CallExpression"];
Node15 [label="Variable: SpeakNow"];
Node14 -> Node15;
Node16 [label="CallExpression"];
Node17 [label="Variable: omg"];
Node16 -> Node17;
Node18 [label="IntegerLiteral: 3"];
Node16 -> Node18;
Node14 -> Node16;
Node13 -> Node14;
Node1 -> Node13;
}
