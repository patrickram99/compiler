digraph AST {
  node [shape=box];
Node1 [label="Program"];
Node2 [label="LetStatement"];
Node3 [label="Variable: xd"];
Node2 -> Node3;
Node4 [label="IntegerLiteral: 5"];
Node2 -> Node4;
Node1 -> Node2;
Node5 [label="LetStatement"];
Node6 [label="Variable: omg"];
Node5 -> Node6;
Node7 [label="FunctionLiteral"];
Node8 [label="Variable: x"];
Node7 -> Node8;
Node9 [label="Variable: y"];
Node7 -> Node9;
Node10 [label="BlockStatement"];
Node11 [label="ExpressionStatement"];
Node12 [label="InfixExpression: +"];
Node13 [label="Variable: x"];
Node12 -> Node13;
Node14 [label="Variable: y"];
Node12 -> Node14;
Node11 -> Node12;
Node10 -> Node11;
Node7 -> Node10;
Node5 -> Node7;
Node1 -> Node5;
Node15 [label="ExpressionStatement"];
Node16 [label="CallExpression"];
Node17 [label="Variable: SpeakNow"];
Node16 -> Node17;
Node18 [label="CallExpression"];
Node19 [label="Variable: omg"];
Node18 -> Node19;
Node20 [label="IntegerLiteral: 2"];
Node18 -> Node20;
Node21 [label="IntegerLiteral: 4"];
Node18 -> Node21;
Node16 -> Node18;
Node15 -> Node16;
Node1 -> Node15;
}
